#获取图像的属性：
import cv2
import numpy as np
filename = 'E:\ALG\项目\流水线\python\SEGSU\pic\\7.jpg'
filename2 = 'E:\ALG\项目\流水线\python\SEGSU\pic\\1.jpg'
img  = cv2.imdecode(np.fromfile((filename.replace("\\", "//")),
                              dtype=np.uint8), cv2.IMREAD_COLOR)
img2  = cv2.imdecode(np.fromfile((filename2.replace("\\", "//")),
                              dtype=np.uint8), cv2.IMREAD_COLOR)
print(img.shape)  #类型
print(img.size)   #像素值
print(img.dtype)  #数据类型，在OpenCV-python代码中经常出现数据类型不一致

#提取ROI区域，截取部分图
ball=img[280:340,330:390]
img[273:333,100:160]=ball  #部分区域叠放

#拆分与合并图像
B,G,R=cv2.split(img)  #通道提取1，split()操作比较耗时
b=img[:,:,0]          #通道提取2
img=cv2.merge([B,G,R])  #通道合并
#img[:,:,2]=0   #红色通道中所有像素为0




#图像上的算术：加，减，位运算
# cv2.add()，cv2.addWeighted()
x = np.uint8([250])
y = np.uint8([10])
print (cv2.add(x,y))    #结果255
print (x+y)             #4


#图像混合
"""
dst = a*img1 + b*img2 + c

"""
import cv2
import numpy as np
img1=img
img2=img2
#dst=cv2.addWeighted(img1,0.7,img2,0.3,0)

#图像按位运算
"""
按位操作包括：AND，OR，NOT，XOR
可用于选择非矩形ROI感兴趣区域
在血清的试管去除标签中有用到
"""
import cv2
import numpy as np
# 加载图像
img1 = img
img2 = img2
# I want to put logo on top-left corner, So I create a ROI
rows,cols,channels = img2.shape
roi = img1[0:rows, 0:cols ]
# Now create a mask of logo and create its inverse mask also
img2gray = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)
ret, mask = cv2.threshold(img2gray, 175, 255, cv2.THRESH_BINARY)

mask_inv = cv2.bitwise_not(mask)    #像素取反

# Now black-out the area of logo in ROI
# 取roi 中与mask 中不为零的值对应的像素的值，其他值为0
# 注意这里必须有mask=mask 或者mask=mask_inv, 其中的mask= 不能忽略
img1_bg = cv2.bitwise_and(roi,roi,mask = mask)  #  取 roi对应的mask
# 取roi 中与mask_inv 中不为零的值对应的像素的值，其他值为0。
# Take only region of logo from logo image.
img2_fg = cv2.bitwise_and(img2,img2,mask = mask_inv)  #取img2的mask反区域
# Put logo in ROI and modify the main image
dst = cv2.add(img1_bg,img2_fg)  #合并


img1[0:rows, 0:cols ] = dst
cv2.imshow('res',img1)
cv2.waitKey(0)
cv2.destroyAllWindows()



#为图像扩边，加相框
"""
top,botton,left,right 对应边界的像素数目
borderType :边界类型
    cv2.BORDER_CONSTANT,value=BLUE  添加有颜色边界并指定边界类型
    cv2.BORDER_REFLECT 边界元素的镜像
    cv2.BORDER_REPLICATE 重复最后一个元素
    cv2.BORDER_WRAP 不知道怎么说了, 就像这样: cdefgh|abcdefgh|abcdefg
"""
from matplotlib import pyplot as plt
BLUE=[0,255,255]

replicate = cv2.copyMakeBorder(img,10,10,10,10,cv2.BORDER_REPLICATE)
reflect = cv2.copyMakeBorder(img,10,10,10,10,cv2.BORDER_REFLECT)
reflect101 = cv2.copyMakeBorder(img,10,10,10,10,cv2.BORDER_REFLECT_101)
wrap = cv2.copyMakeBorder(img,10,10,10,10,cv2.BORDER_WRAP)
constant= cv2.copyMakeBorder(img,20,20,20,20,cv2.BORDER_CONSTANT,value=BLUE)
plt.subplot(231),plt.imshow(img,'gray'),plt.title('ORIGINAL')
plt.subplot(232),plt.imshow(replicate,'gray'),plt.title('REPLICATE')
plt.subplot(233),plt.imshow(reflect,'gray'),plt.title('REFLECT')
plt.subplot(234),plt.imshow(reflect101,'gray'),plt.title('REFLECT_101')
plt.subplot(235),plt.imshow(wrap,'gray'),plt.title('WRAP')
plt.subplot(236),plt.imshow(constant,'gray'),plt.title('CONSTANT')
plt.show()


